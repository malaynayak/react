{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","texttransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHC8BXC,EA5BD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BAAMC,MAAO,CACZC,cAAe,aACfC,QAAS,eACTC,OAAQ,SACRC,OAAQ,iBACRC,QAAS,OACVC,IAAKP,EAAGJ,MAAOI,EAAGJ,KANlB,KAM0BI,EAAGH,OAN7B,QASX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,gCAASa,OAAOC,WAAWpB,EAAMqB,MAAMC,QAAQ,Q,gCCnB/DC,E,4LAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MASb,OARKL,KAAKxB,MAAM8B,UACZF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAC3B,OAAO,kBAACmB,EAAD,CACHjB,YAAaF,EAAME,YACnBoB,OAAQtB,EAAMsB,MACdN,IAAKhB,EAAMgC,SAInB,6BACMH,O,GAlBGI,aAuCNC,uBAfS,SAACC,GACrB,MAAO,CACHN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.e52910ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3z98y\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n    \r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span style={{\r\n                texttransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px ',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }} key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>{Number.parseFloat(props.price.toFixed(2))}</strong></p>\r\n        </div>\t\r\n    );\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => {\r\n                return <Order\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} \r\n                    key={order.id} />\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                { orders }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}